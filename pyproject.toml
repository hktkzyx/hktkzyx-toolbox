[tool.poetry]
name = "hktkzyx-toolbox"
version = "0.5.1"
description = "Toolbox of hktkzyx."
authors = ["hktkzyx <hktkzyx@yeah.net>"]
license = "MIT"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Natural Language :: Chinese (Simplified)",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
    "Framework :: Flask",
]

[tool.poetry.dependencies]
python = ">=3.8,<3.10"
numpy = "^1.21"
scipy = "^1.7.1"
flake8-docstrings = { version = "^1.6.0", optional = true }
flake8 = { version = "^4.0.1", optional = true }
yapf = { version = "^0.32.0", optional = true }
pre-commit = { version = "^2.17.0", optional = true }
isort = { version = "^5.10.1", optional = true }
click = "^8.0.4"

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
pytest-cov = "^2.12.1"

[tool.poetry.extras]
dev-tools = ["flake8", "flake8-docstrings", "yapf", "pre-commit", "isort"]

[tool.pytest.ini_options]
testpaths = "tests"

[tool.coverage.run]
source = ["hktkzyx_toolbox/*"]

[tool.coverage.report]
include = ["hktkzyx_toolbox/*"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.5.1"
tag_format = "v$version"
version_files = ["pyproject.toml:version"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.yapf]
based_on_style = "pep8"
split_before_arithmetic_operator = true
split_before_named_assigns = false
indent_dictionary_value = true
split_all_top_level_comma_separated_values = true

[tool.isort]
profile = "google"
